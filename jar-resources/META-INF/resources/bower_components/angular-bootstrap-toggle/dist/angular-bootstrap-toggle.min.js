(function(){"use strict";angular.module("ui.toggle",[]).value("$toggleSuppressError",false).constant("toggleConfig",{btnCheckboxFalse:false,btnCheckboxTrue:true,on:"On",off:"Off",size:"",onstyle:"btn-primary",offstyle:"btn-default",toggleStyle:"",width:"",height:"",disabled:false}).controller("ToggleController",["$scope","$attrs","$interpolate","$log","toggleConfig","$toggleSuppressError",function($scope,$attrs,$interpolate,$log,toggleConfig,$toggleSuppressError){var self=this;var labels,spans,divs;var ngModelCtrl={$setViewValue:angular.noop};var toggleConfigKeys=Object.keys(toggleConfig);angular.forEach(toggleConfigKeys,function(k,i){if(angular.isDefined($attrs[k])){switch(typeof toggleConfig[k]){case"string":self[k]=$interpolate($attrs[k])($scope.$parent);break;case"function":break;default:self[k]=$scope.$parent.$eval($attrs[k])}}else{self[k]=toggleConfig[k]}});this.init=function(ngModelCtrl_){ngModelCtrl=ngModelCtrl_;labels=self.element.find("label");spans=self.element.find("span");divs=self.element.find("div");angular.element(labels[0]).html(self.on);angular.element(labels[1]).html(self.off);self.computeStyle();ngModelCtrl.$render=function(){self.toggle()};if(angular.isDefined($attrs.ngChange)){ngModelCtrl.$viewChangeListeners.push(function(){$scope.$eval($attrs.ngChange)})}};this.computeStyle=function(){angular.element(labels[0]).attr("disabled",self.disabled);angular.element(labels[1]).attr("disabled",self.disabled);angular.element(spans[0]).attr("disabled",self.disabled);$scope.wrapperStyle=self.toggleStyle?$scope.$parent.$eval(self.toggleStyle):{};if(self.width){$scope.wrapperStyle.width=self.width}else{var wrapperComputedWidth=Math.max(labels[0].offsetWidth,labels[1].offsetWidth);var wrapperWidth=divs[0].offsetWidth;if(wrapperWidth<wrapperComputedWidth){$scope.wrapperStyle.width=wrapperComputedWidth+"px"}else{$scope.wrapperStyle.width=wrapperWidth+"px"}}if(self.height){$scope.wrapperStyle.height=self.height}else{var wrapperComputedHeight=Math.max(labels[0].offsetHeight,labels[1].offsetHeight);var wrapperHeight=divs[1].offsetHeight;if(wrapperHeight<wrapperComputedHeight&&self.size!=="btn-xs"&&self.size!=="btn-sm"){$scope.wrapperStyle.height=wrapperComputedHeight+"px"}else{$scope.wrapperStyle.height=wrapperHeight+"px"}}$scope.onClass=[self.onstyle,self.size,"toggle-on"];$scope.offClass=[self.offstyle,self.size,"toggle-off"];$scope.handleClass=[self.size,"toggle-handle"]};this.toggle=function(){if(angular.isDefined(ngModelCtrl.$viewValue)){if(ngModelCtrl.$viewValue){$scope.wrapperClass=[self.onstyle,self.size,self.style]}else{$scope.wrapperClass=[self.offstyle,"off ",self.size,self.style]}}else{$scope.wrapperClass=[self.offstyle,"off ",self.size,self.style]}};$scope.onSwitch=function(evt){if(self.disabled){return false}else{ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);ngModelCtrl.$render()}return true};angular.forEach(["ngModel"],function(key){var watch=$scope.$parent.$watch($attrs[key],function(value){ngModelCtrl.$render()});$scope.$parent.$on("$destroy",function(){watch()})});angular.forEach(toggleConfigKeys,function(k,i){$attrs.$observe(k,function(v){if(self[k]!==v){self[k]=v;self.computeStyle()}})})}]).directive("toggle",function(){return{restrict:"E",transclude:true,template:'<div class="toggle btn" ng-class="wrapperClass" ng-style="wrapperStyle" ng-click="onSwitch($event)">'+'<div class="toggle-group">'+'<label class="btn" ng-class="onClass"></label>'+'<label class="btn active" ng-class="offClass"></label>'+'<span class="btn btn-default" ng-class="handleClass"></span>'+"</div>"+"</div>",scope:{ngModel:"="},require:["toggle","ngModel"],controller:"ToggleController",controllerAs:"toggle",compile:function(element,attrs,transclude){return{pre:function(scope,element,attrs,ctrls){var toggleCtrl=ctrls[0],ngModelCtrl=ctrls[1];toggleCtrl.element=element;toggleCtrl.init(ngModelCtrl)},post:function(){}}}}})})();